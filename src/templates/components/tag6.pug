section(
  id="tag5"
  class="section section--five"
  )
  h2.section__title WCAG – Recomendações de Acessibilidade para o conteúdo Web

  p.section__content A WCAG é um conjunto de recomendações da W3C para que o conteúdo Web seja acessível. Ela tem como objetivo fornecer técnicas de codificação para que o conteúdo se torne acessível. Sua primeira versão, de 1999, já previa inúmeras técnicas. Atualmente, em 2016, estamos na versão WCAG 2.0, que modificou estruturalmente a versão anterior e está dividida em:

  ul.section__content
    li
      span.section__content--bold Princípios
      |  são a base para a acessibilidade na Web
    li
      span.section__content--bold Diretrizes
      |  são os 12 objetivos básicos sobre os princípios
    li
      span.section__content--bold Critérios de sucesso para cada diretriz
      |  há critérios para as cumpri-las, que vão de A (mais baixo) a AAA (mais alto)
    li
      span.section__content--bold Técnicas de tipo suficientes e aconselhadas
      |  suficientes são as que já cumprem as diretrizes, porem as aconselhadas são as que vão além de inúmeras barreiras de acessibilidade

  hr

  p.section__content Abaixo, segue um resumo de cada princípio com as diretrizes principais e técnicas para as cumprir:

  article.section__article
    h3.section__article__title Perceptível: o usuário deve poder perceber o conteúdo. Este, não pode ser invisível para alguns sentidos
      span

    h4.section__content Diretriz 1.1 – É necessário ter uma alternativa em texto

    ul
      li.section__content <i class="fa fa-check" aria-hidden="true"></i> Dica 1: use o atributo alt nas imagens.
        code.section__article__code &lt;img src="logo.jpg" alt="Este é o Logo da Empresa"&gt;

      li.section__content <i class="fa fa-check" aria-hidden="true"></i> Dica 2: Coloque os links para uma página explicando os diagramas que tenham na página, por exemplo, se aquele diagrama veio de um pesquisa do IBGE, ou um texto próximo ao diagrama o explicando.

      li.section__content <i class="fa fa-check" aria-hidden="true"></i> Dica 3: caso você tenha um formulário, basta indexar os inputs aos respectivos labels, ou colocar um title nos inputs caso ELES NÃO POSSUAM LABEL, ou para inputs tipo img, colocar um alt.

        code.section__article__code &lt;label for="email"&gt; Insira seu email &lt;label&gt;

        code.section__article__code &lt;input type="text" title="Código de Área"&gt;

        code.section__article__code &lt;input type="img" alt="Enviar Formulário"&gt;

      li.section__content <i class="fa fa-check" aria-hidden="true"></i> Dica 4: o elemento não textual deve ser ignorado pelas tecnologias assistivas. Basta inserir este elemento via CSS. O exemplo abaixo, é com uma imagem com background
        code.section__article__code div { background: ulr(‘imagens/minha_imagem.jpg’) no-repeat; }

    h4.section__content Diretriz 1.2 - conteúdo em áudio e vídeo
      ul
        li.section__content <i class="fa fa-check" aria-hidden="true"></i> Dica 1: ofereça um texto alternativo, como uma transcrição do vídeo ou do áudio, próximo à mídia. Exemplo disso é o site de palestra <a href="https://www.ted.com" title="Ir para site de palestras TED" class="link-r" target="blanck">TED</a>

        li.section__content <i class="fa fa-check" aria-hidden="true"></i> Dica 2 </span>: como já exposto aqui, ofereça uma possibilidade de colocar linguagem de sinais

    h4.section__content Diretriz 1.3 – adaptável
      ul
        li.section__content <i class="fa fa-check" aria-hidden="true"></i> Dica 1 </span>: use bastante a semântica HTML. Dicas e mais dicas não caberiam aqui. No final da página, há artigos sobre a semântica HTML

        li.section__content <i class="fa fa-check" aria-hidden="true"></i> Dica 2 </span>: como já dito aqui e repito: não faça com que o conteúdo dependa da sua forma, cor ou qualquer característica sensorial

    h4.section__content Diretriz 1.4 – discernível
      ul
        li.section__content <i class="fa fa-check" aria-hidden="true"></i> Dica 1 </span>: forneça formas para que o usuário possa modificar o tamanho das fontes

        li.section__content <i class="fa fa-check" aria-hidden="true"></i> Dica 2 </span>: forneça formas para que o usuário dê alto contraste na página

        li.section__content <i class="fa fa-check" aria-hidden="true"></i> Dica 3 </span>: caso o site tenha áudio automático, após 3 segundos o usuário deve ter uma forma de controlar este áudio

        li.section__content <i class="fa fa-check" aria-hidden="true"></i> Dica 4 </span>: a página deve possuir um contraste para leitura. Link de referência: <a href="https://www.w3.org/Translations/WCAG20-pt-br/#visual-audio-contrast" title="Ir para as recomendações da WCAG sobre o contraste visual" class="link-r" target="blanck"> Site da W3C </a>

  article.section__article
    h3.section__article__title Operável: o conteúdo deve ser acessível de forma que qualquer usuário possa interagir com ele
      span

    h4.section__content Diretriz 2.1 – acessível via teclado

    ul
      li.section__content <i class="fa fa-check" aria-hidden="true"></i> Dica 1: ofereça uma navegação alternativa via teclado. Para tanto, utilize o atributo tabindex do HTML caso queira estabelecer uma ordem de foco para os elementos. Lembre-se: link, por padrão, já recebem foco.

      li.section__content <i class="fa fa-check" aria-hidden="true"></i> Dica 2: não deixe que o usuário fique bloqueado na página devido a falta de um teclado.

    h4.section__content Diretriz 2.2 – tempo suficiente: dê ao usuário tempo suficiente para navegar pela página e ler o conteúdo

    h4.section__content Diretriz 2.3 – convulsões: não coloque elementos na página que pisquem mais de 3 vezes num segundo. Quem não se lembra do caso polêmico envolvendo o desenho animado <a href="http://hypescience.com/como-pokemon-fez-o-exercito-dos-eua-sonhar-com-uma-arma-de-convulsoes/" title="Ir para a página de noticias da Hypescience sobre a polêmica do desenho Pokemon" class="link-r" target="blanck">Pokémon</a>

    h4.section__content Diretriz 2.4 – tempo suficiente: dê ao usuário tempo suficiente para navegar pela página e ler o conteúdo

    ul
      li.section__content <i class="fa fa-check" aria-hidden="true"></i> Dica 1: coloque um link no início da página para o conteúdo principal

      li.section__content <i class="fa fa-check" aria-hidden="true"></i> Dica 2: utilize sempre cabeçalhos para estruturar os títulos das seções da página

      li.section__content <i class="fa fa-check" aria-hidden="true"></i> Dica 3: crie uma sequência lógica entre os links da página

      li.section__content <i class="fa fa-check" aria-hidden="true"></i> Dica 4: utilize breadcrumbs no topo da seção para que o usuário saiba onde está na página, ou num conjunto de páginas

  article.section__article
    h3.section__article__title Compreensível: toda a interface precisa ser intuitiva, compreensível
      span

    h4.section__content Diretriz 3.1 – legível: utilize o atributo lang do HTML para que os mecanismo de leitura de tela possam saber em qual linguagem está aquela página

    h4.section__content Diretriz 3.2 – previsível:
      ul
        li.section__content <i class="fa fa-check" aria-hidden="true"></i> Dica 1: não crie menus dropdowns que ao usuário passar o mouse, os links relacionados sejam mostrados abaixo, dificultando sua interação

        li.section__content <i class="fa fa-check" aria-hidden="true"></i> Dica 2: não modifique um estado automaticamente a menos que você avise ao usuário que isso irá acontecer

    h4.section__content Diretriz 3.3 – Assistência de entrada
      ul
        li.section__content <i class="fa fa-check" aria-hidden="true"></i> Dica 1: forneça mecanismos para que o usuário não cometa erros

        li.section__content <i class="fa fa-check" aria-hidden="true"></i> Dica 2: caso o usuário cometa erros, o informe qual erro cometeu e como corrigi-lo

  article.section__article
    h3.section__article__title Robusto: O conteúdo deve ser colocado de forma que qualquer usuário possa acessa-lo com qualquer tecnologia de acesso a web
      span

    h4.section__content Diretriz 4.1 – compatível: use e abuse da semântica HTML e construa páginas que possam ser compatíveis com a maioria dos dispositivos, inclusive com tecnologias assistivas

  p.section__content Até agora, você já viu inúmeras recomendações e outras há no site da W3C. Porem, há situações em que a semântica HTML nãpo dá conta. É necessário estender essa semântica. O próxim tópico trata da solução para este problema: a WAI-ARIA

  include ../includes/link-menu.pug
